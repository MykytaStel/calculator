{"version":3,"sources":["components/TradingView/index.js","store/formatDataSlice.js","store/crashReporter.js","store/logger.js","store/index.js","components/CustomInput/index.js","store/selectors/index.js","components/CustomForms/index.js","helpers/index.js","components/ResultComponent/index.js","pages/Home.js","App.js","index.js"],"names":["tvScriptLoadingPromise","initialState","stockTicker","days","entryDate","Date","toISOString","split","expirationDate","exitLevel","stockPrice","credit","dividend","shortStrike","combinedProfit","costPerShares","ror","breakEven","downsideProtection","annualizedROR","formDataSlice","createSlice","name","reducers","setStockTicker","state","action","payload","setEntryDate","setExpirationDate","setUpdateDays","setExitLevel","setStockPrice","setCombinedProfit","setCredit","setDividend","setShortStrike","setCostPerShares","setROR","setBreakEven","setDownsideProtection","setAnnualizedROR","_formDataSlice$action","actions","crashReporter","next","err","console","error","logger","store","group","type","log","result","getState","groupEnd","configureStore","reducer","formData","formDataReducer","middleware","getDefaultMiddleware","concat","CustomInput","_ref","field","_ref$formikProps","formikProps","touched","errors","label","placeholder","props","_objectWithoutProperties","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useState3","_useState4","isFilled","setIsFilled","showPlaceholder","isError","React","createElement","className","htmlFor","id","Object","assign","onFocus","onBlur","e","target","value","handleBlur","getStockTicker","selectExpirationDate","createSelector","selectEntryDate","selectStockTicker","selectStockPrice","selectShortStrike","selectCredit","selectDividend","selectCombinedProfit","selectCostPerShares","selectROR","selectDays","selectExitLevel","selectBreakEven","selectAnnualizedROR","selectDownsideProtection","validationSchema","yup","shape","required","max","min","MyForm","today","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","getTodayDate","dispatch","useDispatch","useSelector","useEffect","entryDateString","expirationDateString","Math","ceil","calculateDays","isNaN","stockExitLevel","parseFloat","toFixed","breakEvenData","downsideProtectionData","combinedNet","annualizedRORData","rorData","Formik","initialValues","Form","Field","component","onChange","setFieldValue","handleStockTickerChange","handleEntryDateChange","handleExpirationDateChange","Number","handleStockPriceChange","handleShortStrikeChange","handleSetCredit","handleSetDividend","connect","onLoadScriptRef","useRef","current","document","getElementById","window","TradingView","widget","autosize","symbol","interval","timezone","theme","style","locale","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","details","hotlist","container_id","Promise","resolve","script","src","onload","head","appendChild","then","isValidNumber","Infinity","Result","number","isAnnualizedROR","isROR","isCombinedProfit","isDownsideProtection","costPerSharesData","Intl","NumberFormat","format","TradingViewWidget","Home","ResultComponent","App","Router","Routes","Route","path","element","rootElement","createRoot","render","Provider"],"mappings":"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","file":"static/js/main.0b944240.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { getStockTicker } from '../../store/selectors';\nimport { connect, useSelector } from 'react-redux';\nimport './styles.css';\n\nlet tvScriptLoadingPromise;\n\nconst TradingViewWidget = () => {\n  const onLoadScriptRef = useRef();\n  const stockTicker = useSelector(getStockTicker);\n\n  useEffect(() => {\n    onLoadScriptRef.current = createWidget;\n\n    if (!tvScriptLoadingPromise) {\n      tvScriptLoadingPromise = new Promise((resolve) => {\n        const script = document.createElement('script');\n        script.id = 'tradingview-widget-loading-script';\n        script.src = 'https://s3.tradingview.com/tv.js';\n        script.type = 'text/javascript';\n        script.onload = resolve;\n\n        document.head.appendChild(script);\n      });\n    }\n\n    tvScriptLoadingPromise.then(\n      () => onLoadScriptRef.current && onLoadScriptRef.current()\n    );\n\n    return () => (onLoadScriptRef.current = null);\n    function createWidget() {\n      if (\n        document.getElementById('tradingview_215b4') &&\n        'TradingView' in window\n      ) {\n        new window.TradingView.widget({\n          autosize: true,\n          symbol: stockTicker,\n          interval: 'W',\n          timezone: 'Etc/UTC',\n          theme: 'light',\n          style: '1',\n          locale: 'en',\n          toolbar_bg: '#f1f3f6',\n          enable_publishing: false,\n          withdateranges: true,\n          hide_side_toolbar: false,\n          allow_symbol_change: true,\n          details: true,\n          hotlist: true,\n          container_id: 'tradingview_215b4',\n        });\n      }\n    }\n  }, [stockTicker]);\n\n  return (\n    <div className=\"tradingview-widget-container\">\n      <div id=\"tradingview_215b4\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stockTicker: getStockTicker(state),\n});\n\nexport default connect(mapStateToProps)(TradingViewWidget);\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  stockTicker: 'AAPL',\n  days: 0,\n  entryDate: new Date().toISOString().split('T')[0],\n  expirationDate: new Date().toISOString().split('T')[0],\n  exitLevel: 0,\n  stockPrice: 0,\n  credit: 0,\n  dividend: '',\n  shortStrike: 0,\n  combinedProfit: 0,\n  costPerShares: 0,\n  ror: 0,\n  breakEven: 0,\n  downsideProtection: 0,\n  annualizedROR: 0,\n};\n\nconst formDataSlice = createSlice({\n  name: 'formData',\n  initialState,\n  reducers: {\n    setStockTicker: (state, action) => {\n      state.stockTicker = action.payload;\n    },\n    setEntryDate: (state, action) => {\n      state.entryDate = action.payload;\n    },\n    setExpirationDate: (state, action) => {\n      state.expirationDate = action.payload;\n    },\n    setUpdateDays: (state, action) => {\n      state.days = action.payload;\n    },\n    setExitLevel: (state, action) => {\n      state.exitLevel = action.payload;\n    },\n    setStockPrice: (state, action) => {\n      state.stockPrice = action.payload;\n    },\n    setCombinedProfit: (state, action) => {\n      state.combinedProfit = action.payload;\n    },\n    setCredit: (state, action) => {\n      state.credit = action.payload;\n    },\n    setDividend: (state, action) => {\n      state.dividend = action.payload;\n    },\n    setShortStrike: (state, action) => {\n      state.shortStrike = action.payload;\n    },\n    setCostPerShares: (state, action) => {\n      state.costPerShares = action.payload;\n    },\n    setROR: (state, action) => {\n      state.ror = action.payload;\n    },\n    setBreakEven: (state, action) => {\n      state.breakEven = action.payload;\n    },\n    setDownsideProtection: (state, action) => {\n      state.downsideProtection = action.payload;\n    },\n    setAnnualizedROR: (state, action) => {\n      state.annualizedROR = action.payload;\n    },\n  },\n});\n\nexport const {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCombinedProfit,\n  setCredit,\n  setDividend,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} = formDataSlice.actions;\n\nexport default formDataSlice.reducer;\n","const crashReporter = () => (next) => (action) => {\n  try {\n    return next(action);\n  } catch (err) {\n    console.error('Caught an exception!', err);\n    throw err;\n  }\n};\n\nexport default crashReporter;\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('dispatching', action);\n  const result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { configureStore } from '@reduxjs/toolkit';\nimport formDataReducer from '../store/formatDataSlice';\nimport crashReporter from '../store/crashReporter';\nimport logger from '../store/logger';\n\nconst store = configureStore({\n  reducer: {\n    formData: formDataReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(crashReporter, logger),\n});\n\nexport default store;\n","// CustomInput.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CustomInput = ({\n  field,\n  formikProps: { touched, errors},\n  label,\n  placeholder,\n  ...props\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    if (e.target.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  };\n\n  const showPlaceholder = isFocused && !isFilled;\n  const isError = touched[field.name] && errors[field.name];\n\n  return (\n    <div className=\"input-wrapper\">\n      {label && (\n        <label\n          className={`floating-label ${isFocused || isFilled ? 'active' : ''} ${\n            isError ? 'error' : ''\n          }`}\n          htmlFor={props.id || props.name}\n        >\n          {label}\n        </label>\n      )}\n      <input\n        className={`${isError ? 'input-error' : ''}`}\n        placeholder={showPlaceholder ? placeholder : ''}\n        {...field} // Add this line to pass the field prop to the input element\n        {...props}\n        onFocus={() => setIsFocused(true)}\n        onBlur={(e) => {\n          handleBlur(e);\n          field.onBlur(e); // Add this line to call Formik's onBlur handler\n        }}\n      />\n      {isError && <div className=\"error-message\">{errors[field.name]}</div>}\n    </div>\n  );\n};\n\n\nCustomInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  formikProps: PropTypes.shape({\n    touched: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n  }).isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default CustomInput;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getStockTicker = (state) => state.formData.stockTicker;\nexport const getDays = (state) => state.formData.days;\nexport const getExitLvl = (state) => state.formData.exitLevel;\nexport const getCombinedProfit = (state) => state.formData.combinedProfit;\nexport const getCostPerShares = (state) => state.formData.costPerShares;\nexport const getRORState = (state) => state.formData.ror;\nexport const getBreakEven = (state) => state.formData.breakEven;\nexport const getAnnualizedROR = (state) => state.formData.annualizedROR;\nexport const getDownsideProtection = (state) => state.formData.downsideProtection;\n\n// Memoized selectors\nexport const selectExpirationDate = createSelector(\n  (state) => state.formData.expirationDate,\n  (expirationDate) => expirationDate\n);\n\nexport const selectEntryDate = createSelector(\n  (state) => state.formData.entryDate,\n  (entryDate) => entryDate\n);\n\nexport const selectStockTicker = createSelector(getStockTicker, (stockTicker) => stockTicker);\nexport const selectStockPrice = createSelector((state) => state.formData.stockPrice, (stockPrice) => stockPrice);\nexport const selectShortStrike = createSelector((state) => state.formData.shortStrike, (shortStrike) => shortStrike);\nexport const selectCredit = createSelector((state) => state.formData.credit, (credit) => credit);\nexport const selectDividend = createSelector((state) => state.formData.dividend, (dividend) => dividend);\nexport const selectCombinedProfit = createSelector(getCombinedProfit, (combinedProfit) => combinedProfit);\nexport const selectCostPerShares = createSelector(getCostPerShares, (costPerShares) => costPerShares);\nexport const selectROR = createSelector(getRORState, (ror) => ror);\nexport const selectDays = createSelector(getDays, (days) => days);\nexport const selectExitLevel = createSelector(getExitLvl, (exitLevel) => exitLevel);\nexport const selectBreakEven = createSelector(getBreakEven, (breakEven) => breakEven);\nexport const selectAnnualizedROR = createSelector(getAnnualizedROR, (annualizedROR) => annualizedROR);\nexport const selectDownsideProtection = createSelector(getDownsideProtection, (downsideProtection) => downsideProtection);\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport CustomInput from '../CustomInput';\n// import Button from '../Button';\nimport './styles.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectExpirationDate,\n  selectEntryDate,\n  selectStockTicker,\n  selectStockPrice,\n  selectShortStrike,\n  selectCredit,\n  selectDividend,\n  selectCombinedProfit,\n  selectCostPerShares,\n  selectBreakEven,\n  selectROR,\n  selectDays,\n} from '../../store/selectors'\nimport {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCredit,\n  setDividend,\n  setCombinedProfit,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} from '../../store/formatDataSlice';\nimport * as yup from 'yup';\n\n\nconst validationSchema = yup.object().shape({\n  stockTicker: yup.string().required('Stock ticker is required'),\n  entryDate: yup\n    .date()\n    .required('Entry date is required')\n    .max(yup.ref('expirationDate'), 'Entry date must be before expiration date'),\n  expirationDate: yup\n    .date()\n    .required('Expiration date is required')\n    .min(yup.ref('entryDate'), 'Expiration date must be after entry date'),\n  // stockPrice: yup.number().required('Stock price is required'),\n  stockPrice: yup.number().min(0.01, 'Stock price must be greater than 0').required('Stock price is required'),\n  shortStrike: yup.number().required('Short strike is required'),\n  credit: yup.number().required('Credit is required'),\n  dividend: yup.number().required('Dividend is required'),\n});\nconst getTodayDate = () => {\n  const today = new Date();\n  const yyyy = today.getFullYear();\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n  const dd = String(today.getDate()).padStart(2, '0');\n\n  return `${yyyy}-${mm}-${dd}`;\n};\n\nconst MyForm = () => {\n  const today = getTodayDate();\n  const dispatch = useDispatch();\n  const expirationDate = useSelector(selectExpirationDate);\n  const entryDate = useSelector(selectEntryDate);\n  const stockTicker = useSelector(selectStockTicker);\n  const stockPrice = useSelector(selectStockPrice);\n  const shortStrike = useSelector(selectShortStrike);\n  const credit = useSelector(selectCredit);\n  const dividend = useSelector(selectDividend);\n  const combinedProfit = useSelector(selectCombinedProfit);\n  const costPerShares = useSelector(selectCostPerShares);\n  const breakEven = useSelector(selectBreakEven);\n  const ror = useSelector(selectROR);\n  const days = useSelector(selectDays);\n\n  const calculateDays = (entryDateString, expirationDateString) => {\n    const entryDate = new Date(entryDateString);\n    const expirationDate = new Date(expirationDateString);\n    const oneDayMilliseconds = 1000 * 60 * 60 * 24;\n    const days = (expirationDate - entryDate) / oneDayMilliseconds;\n    return Math.ceil(days);\n  };\n\nuseEffect(() => {\n  const days = calculateDays(entryDate, expirationDate);\n  if (!isNaN(days) && days >= 0) {\n    dispatch(setUpdateDays(days));\n  }\n\n  if (!isNaN(stockPrice)) {\n    const stockExitLevel = parseFloat(stockPrice * 0.92).toFixed(2);\n    dispatch(setExitLevel(stockExitLevel));\n\n    const costPerShares = parseFloat(stockPrice - credit) * 100;\n    dispatch(setCostPerShares(costPerShares));\n\n    const breakEvenData = parseFloat(stockPrice - (credit - dividend));\n    dispatch(setBreakEven(breakEvenData));\n\n    if (breakEven > 0 && !isNaN(breakEven)) {\n      const downsideProtectionData = parseFloat(\n        breakEven / stockPrice - 1\n      ).toFixed(2) * 100;\n      dispatch(setDownsideProtection(downsideProtectionData));\n    }\n  }\n\n  const combinedNet =\n    parseFloat(credit) +\n    parseFloat(dividend) -\n    (parseFloat(stockPrice) - parseFloat(shortStrike));\n  dispatch(setCombinedProfit(combinedNet));\n\n  const annualizedRORData = parseFloat((ror / days) * 365).toFixed(2) * 100;\n  dispatch(setAnnualizedROR(annualizedRORData));\n\n  const rorData = parseFloat((combinedProfit * 100) / costPerShares).toFixed(2) * 100;\n  dispatch(setROR(rorData));\n\n}, [\n  entryDate,\n  expirationDate,\n  stockPrice,\n  shortStrike,\n  credit,\n  dividend,\n  breakEven,\n  combinedProfit,\n  costPerShares,\n  ror,\n  days,\n  dispatch\n]);\n\n  const handleSetCredit = (e, formikProps) => {\n    const value = e.target.value\n    formikProps.setFieldValue('credit', value)\n    dispatch(setCredit(value));\n  };\n\n  const handleSetDividend = (e, formikProps) => {\n    const value = e.target.value\n    formikProps.setFieldValue('dividend', value)\n    dispatch(setDividend(value));\n  };\n\n  const handleStockTickerChange = (e, formikProps) => {\n    const value = e.target.value\n    formikProps.setFieldValue('stockTicker', value)\n    dispatch(setStockTicker(value));\n  };\n\n  const handleEntryDateChange = (e, formikProps) => {\n    const value = e.target.value\n    formikProps.setFieldValue('entryDate', value)\n    dispatch(setEntryDate(value));\n  };\n\n  const handleExpirationDateChange = (e, formikProps) => {\n    const value = e.target.value\n    formikProps.setFieldValue('expirationDate', value)\n    dispatch(setExpirationDate(value));\n  };\n\n const handleStockPriceChange = (e, formikProps) => {\n  const value = e.target.value === '' ? '' : Number(e.target.value);\n  formikProps.setFieldValue('stockPrice', value);\n  dispatch(setStockPrice(value));\n};\n\n  const handleShortStrikeChange = (e, formikProps) => {\n    const value = e.target.value === '' ? '' : Number(e.target.value);\n    formikProps.setFieldValue('shortStrike', value)\n    dispatch(setShortStrike(value));\n  };\n\n\n  return (\n    <div>\n      <h1 className='main-title'>Steady Calculator</h1>\n      <Formik\n        initialValues={{\n          stockTicker: 'AAPL',\n          entryDate: today,\n          expirationDate: '',\n          stockPrice: '',\n          shortStrike: '',\n          credit: '',\n          dividend: '',\n        }}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form>\n            <div className=\"form-grid\">\n              <Field\n                component={CustomInput}\n                label=\"Enter stock/ticker\"\n                name=\"stockTicker\"\n                onChange={(e) => handleStockTickerChange(e, formikProps)}\n                placeholder=\"e.g AAPL\"\n                value={stockTicker}\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Entry date\"\n                name=\"entryDate\"\n                onChange={(e) => handleEntryDateChange(e, formikProps)}\n                type=\"date\"\n                value={entryDate}\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Expiration date\"\n                name=\"expirationDate\"\n                onChange={(e) => handleExpirationDateChange(e, formikProps)}\n                type=\"date\"\n                formikProps={formikProps}\n              />\n\n              <Field\n                component={CustomInput}\n                label=\"Stock Price\"\n                name=\"stockPrice\"\n                onChange={(e) => handleStockPriceChange(e, formikProps)}\n                type=\"number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Short strike\"\n                name=\"shortStrike\"\n                onChange={(e) => handleShortStrikeChange(e, formikProps)}\n                type=\"number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Credit\"\n                name=\"credit\"\n                onChange={(e) => handleSetCredit(e, formikProps)}\n                placeholder=\"enter credit number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Dividend\"\n                name=\"dividend\"\n                onChange={(e) => handleSetDividend(e, formikProps)}\n                placeholder=\"eneter dividend number\"\n                formikProps={formikProps}\n              />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default MyForm;\n","export const isValidNumber = (value) => {\n  return (\n    typeof value === 'number' &&\n    !isNaN(value) &&\n    value !== Infinity &&\n    value !== -Infinity\n  );\n};\n\nexport const formatNumber = (number) => {\n  return new Intl.NumberFormat().format(number);\n};","// Result.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  selectStockTicker,\n  selectDays,\n  selectExitLevel,\n  selectCombinedProfit,\n  selectCostPerShares,\n  selectROR,\n  selectBreakEven,\n  selectDownsideProtection,\n  selectAnnualizedROR,\n} from '../../store/selectors';\nimport TradingViewWidget from '../TradingView';\nimport './styles.css';\nimport { isValidNumber, formatNumber } from '../../helpers'\n\nconst Result = () => {\n  const stockTicker = useSelector(selectStockTicker);\n  const days = useSelector(selectDays);\n  const exitLevel = useSelector(selectExitLevel);\n  const combinedProfit = useSelector(selectCombinedProfit);\n  const costPerShares = useSelector(selectCostPerShares);\n  const ror = useSelector(selectROR);\n  const breakEven = useSelector(selectBreakEven);\n  const downsideProtection = useSelector(selectDownsideProtection);\n  const annualizedROR = useSelector(selectAnnualizedROR);\n  // const stockPrice = useSelector(selectStockPrice);\n\n  const isAnnualizedROR = isValidNumber(annualizedROR) ? annualizedROR : 0;\nconst isROR = isValidNumber(ror) ? ror : 0;\nconst isCombinedProfit = isValidNumber(combinedProfit) ? combinedProfit : 0;\nconst isDownsideProtection= isValidNumber(downsideProtection) ? downsideProtection : 0;\n\n  // const isStockPrice = isValidNumber(stockPrice) ? stockPrice : 0;\n  const costPerSharesData = formatNumber(costPerShares);\n\n  return (\n    <div className=\"result-container\">\n      <h2 className=\"result-title\">Your Results</h2>\n      <div className=\"result-grid\">\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Stock Ticker</span>\n          <span className=\"result-item-value\">{stockTicker}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Days</span>\n          <span className=\"result-item-value\">{days}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Exit Level</span>\n          <span className=\"result-item-value\">${exitLevel}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">\n            Combined Net Credit / Profit\n          </span>\n          <span className=\"result-item-value\">${isCombinedProfit}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Cost per 100 shares</span>\n          <span className=\"result-item-value\">${costPerSharesData}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">ROR</span>\n          <span className=\"result-item-value\">{isROR}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Downside protection</span>\n          <span className=\"result-item-value\">{isDownsideProtection}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Annualized ROR</span>\n          <span className=\"result-item-value\">{isAnnualizedROR}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Break Even</span>\n          <span className=\"result-item-value\">{breakEven}</span>\n        </div>\n      </div>\n      <div className=\"tradingview-container\">\n        <h3 className=\"tradingview-title\">TradingView Chart</h3>\n        <TradingViewWidget stockTicker={stockTicker} />\n      </div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  stockTicker: PropTypes.string,\n  days: PropTypes.number,\n  exitLevel: PropTypes.number,\n  combinedProfit: PropTypes.number,\n  costPerShares: PropTypes.number,\n  ror: PropTypes.number,\n  breakEven: PropTypes.number,\n  downsideProtection: PropTypes.number,\n  annualizedROR: PropTypes.number,\n};\n\nexport default Result;\n","import React from 'react';\nimport MyForm from '../components/CustomForms';\nimport ResultComponent from '../components/ResultComponent';\n\nconst Home = () => {\n  return (\n    <div>\n      <MyForm />\n      <ResultComponent />\n    </div>\n  );\n};\n\nexport default Home;\n","// import React from 'react';\n// import Header from './components/Header';\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Header />\n//       <Sidebar />\n//     </div>\n//   );\n// };\n\n// export default App;\n// App.js\n// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\n// import Sidebar from './components/Sidebar';\n\nconst App = () => {\n  return (\n    <Router>\n      {/* <Sidebar /> */}\n      <div>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n        </nav> */}\n        <Routes>\n          <Route path=\"/\" element={<Home /> } />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\ncreateRoot(rootElement).render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}