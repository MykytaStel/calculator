{"version":3,"sources":["components/TradingView/index.js","store/formatDataSlice.js","store/crashReporter.js","store/logger.js","store/index.js","components/CustomInput/index.js","store/selectors/index.js","helpers/index.js","components/CustomForms/index.js","components/ProgressBar/index.js","components/ResultComponent/index.js","pages/Home.js","App.js","index.js"],"names":["tvScriptLoadingPromise","initialState","stockTicker","days","entryDate","Date","toISOString","split","expirationDate","exitLevel","stockPrice","credit","dividend","shortStrike","combinedProfit","costPerShares","ror","breakEven","downsideProtection","annualizedROR","formDataSlice","createSlice","name","reducers","setStockTicker","state","action","payload","setEntryDate","setExpirationDate","setUpdateDays","setExitLevel","setStockPrice","setCombinedProfit","setCredit","setDividend","setShortStrike","setCostPerShares","setROR","setBreakEven","setDownsideProtection","setAnnualizedROR","_formDataSlice$action","actions","crashReporter","next","err","console","error","logger","store","group","type","log","result","getState","groupEnd","configureStore","reducer","formData","formDataReducer","middleware","getDefaultMiddleware","concat","CustomInput","_ref","field","_ref$formikProps","formikProps","touched","errors","label","placeholder","props","_objectWithoutProperties","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useState3","_useState4","isFilled","setIsFilled","showPlaceholder","isError","React","createElement","className","htmlFor","id","Object","assign","onFocus","onBlur","e","target","value","handleBlur","getStockTicker","selectExpirationDate","createSelector","selectEntryDate","selectStockTicker","selectStockPrice","selectShortStrike","selectCredit","selectDividend","selectCombinedProfit","selectCostPerShares","selectROR","selectDays","selectExitLevel","selectBreakEven","selectAnnualizedROR","selectDownsideProtection","isValidNumber","isNaN","Infinity","formatNumber","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","validationSchema","yup","shape","required","max","min","MyForm","today","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","getTodayDate","dispatch","useDispatch","useSelector","useEffect","entryDateString","expirationDateString","Math","ceil","calculateDays","stockExitLevel","round","parseFloat","toFixed","breakEvenData","combinedNet","outputAnnRORData","rorOutPut","Formik","initialValues","Form","Field","component","onChange","setFieldValue","handleStockTickerChange","handleEntryDateChange","handleExpirationDateChange","Number","handleStockPriceChange","handleShortStrikeChange","handleSetCredit","handleSetDividend","connect","onLoadScriptRef","useRef","current","document","getElementById","window","TradingView","widget","autosize","symbol","interval","timezone","theme","style","locale","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","details","hotlist","container_id","Promise","resolve","script","src","onload","head","appendChild","then","ProgressBar","currentStep","steps","isConstantStep","index","creditPosition","creditStep","length","calculateCreditPosition","map","step","key","join","position","bottom","left","transform","color","padding","height","backgroundColor","display","alignItems","transition","data-index","width","opacity","Result","isAnnualizedROR","isROR","isCombinedProfit","isDownsideProtection","formatedROR","format","costPerSharesData","combinedNetOutput","annualizedROROutput","downsideProtectionOutput","toLocaleString","maxProfit","TradingViewWidget","Home","ResultComponent","App","Router","Link","to","Routes","Route","path","element","rootElement","createRoot","render","Provider"],"mappings":"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","file":"static/js/main.8b54097e.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { getStockTicker } from '../../store/selectors';\nimport { connect, useSelector } from 'react-redux';\nimport './styles.css';\n\nlet tvScriptLoadingPromise;\n\nconst TradingViewWidget = () => {\n  const onLoadScriptRef = useRef();\n  const stockTicker = useSelector(getStockTicker);\n\n  useEffect(() => {\n    onLoadScriptRef.current = createWidget;\n\n    if (!tvScriptLoadingPromise) {\n      tvScriptLoadingPromise = new Promise((resolve) => {\n        const script = document.createElement('script');\n        script.id = 'tradingview-widget-loading-script';\n        script.src = 'https://s3.tradingview.com/tv.js';\n        script.type = 'text/javascript';\n        script.onload = resolve;\n\n        document.head.appendChild(script);\n      });\n    }\n\n    tvScriptLoadingPromise.then(\n      () => onLoadScriptRef.current && onLoadScriptRef.current()\n    );\n\n    return () => (onLoadScriptRef.current = null);\n    function createWidget() {\n      if (\n        document.getElementById('tradingview_215b4') &&\n        'TradingView' in window\n      ) {\n        new window.TradingView.widget({\n          autosize: true,\n          symbol: stockTicker,\n          interval: 'W',\n          timezone: 'Etc/UTC',\n          theme: 'light',\n          style: '1',\n          locale: 'en',\n          toolbar_bg: '#f1f3f6',\n          enable_publishing: false,\n          withdateranges: true,\n          hide_side_toolbar: false,\n          allow_symbol_change: true,\n          details: true,\n          hotlist: true,\n          container_id: 'tradingview_215b4',\n        });\n      }\n    }\n  }, [stockTicker]);\n\n  return (\n    <div className=\"tradingview-widget-container\">\n      <div id=\"tradingview_215b4\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stockTicker: getStockTicker(state),\n});\n\nexport default connect(mapStateToProps)(TradingViewWidget);\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  stockTicker: 'AAPL',\n  days: 0,\n  entryDate: new Date().toISOString().split('T')[0],\n  expirationDate: new Date().toISOString().split('T')[0],\n  exitLevel: 0,\n  stockPrice: 0,\n  credit: 0,\n  dividend: '',\n  shortStrike: 0,\n  combinedProfit: 0,\n  costPerShares: 0,\n  ror: 0,\n  breakEven: 0,\n  downsideProtection: 0,\n  annualizedROR: 0,\n};\n\nconst formDataSlice = createSlice({\n  name: 'formData',\n  initialState,\n  reducers: {\n    setStockTicker: (state, action) => {\n      state.stockTicker = action.payload;\n    },\n    setEntryDate: (state, action) => {\n      state.entryDate = action.payload;\n    },\n    setExpirationDate: (state, action) => {\n      state.expirationDate = action.payload;\n    },\n    setUpdateDays: (state, action) => {\n      state.days = action.payload;\n    },\n    setExitLevel: (state, action) => {\n      state.exitLevel = action.payload;\n    },\n    setStockPrice: (state, action) => {\n      state.stockPrice = action.payload;\n    },\n    setCombinedProfit: (state, action) => {\n      state.combinedProfit = action.payload;\n    },\n    setCredit: (state, action) => {\n      state.credit = action.payload;\n    },\n    setDividend: (state, action) => {\n      state.dividend = action.payload;\n    },\n    setShortStrike: (state, action) => {\n      state.shortStrike = action.payload;\n    },\n    setCostPerShares: (state, action) => {\n      state.costPerShares = action.payload;\n    },\n    setROR: (state, action) => {\n      state.ror = action.payload;\n    },\n    setBreakEven: (state, action) => {\n      state.breakEven = action.payload;\n    },\n    setDownsideProtection: (state, action) => {\n      state.downsideProtection = action.payload;\n    },\n    setAnnualizedROR: (state, action) => {\n      state.annualizedROR = action.payload;\n    },\n  },\n});\n\nexport const {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCombinedProfit,\n  setCredit,\n  setDividend,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} = formDataSlice.actions;\n\nexport default formDataSlice.reducer;\n","const crashReporter = () => (next) => (action) => {\n  try {\n    return next(action);\n  } catch (err) {\n    console.error('Caught an exception!', err);\n    throw err;\n  }\n};\n\nexport default crashReporter;\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('dispatching', action);\n  const result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { configureStore } from '@reduxjs/toolkit';\nimport formDataReducer from '../store/formatDataSlice';\nimport crashReporter from '../store/crashReporter';\nimport logger from '../store/logger';\n\nconst store = configureStore({\n  reducer: {\n    formData: formDataReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(crashReporter, logger),\n});\n\nexport default store;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CustomInput = ({\n  field,\n  formikProps: { touched, errors },\n  label,\n  placeholder,\n  ...props\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    if (e.target.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  };\n\n  const showPlaceholder = isFocused && !isFilled;\n  const isError = touched[field.name] && errors[field.name];\n\n  return (\n    <div className=\"input-wrapper\">\n      {label && (\n        <label\n          className={`floating-label ${isFocused || isFilled ? 'active' : ''} ${\n            isError ? 'error' : ''\n          }`}\n          htmlFor={props.id || props.name}\n        >\n          {label}\n        </label>\n      )}\n      <input\n        className={`${isError ? 'input-error' : ''}`}\n        placeholder={showPlaceholder ? placeholder : ''}\n        {...field} // Add this line to pass the field prop to the input element\n        {...props}\n        onFocus={() => setIsFocused(true)}\n        onBlur={(e) => {\n          handleBlur(e);\n          field.onBlur(e); // Add this line to call Formik's onBlur handler\n        }}\n      />\n      {isError && <div className=\"error-message\">{errors[field.name]}</div>}\n    </div>\n  );\n};\n\nCustomInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  formikProps: PropTypes.shape({\n    touched: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n  }).isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default CustomInput;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getStockTicker = (state) => state.formData.stockTicker;\nexport const getDays = (state) => state.formData.days;\nexport const getExitLvl = (state) => state.formData.exitLevel;\nexport const getCombinedProfit = (state) => state.formData.combinedProfit;\nexport const getCostPerShares = (state) => state.formData.costPerShares;\nexport const getRORState = (state) => state.formData.ror;\nexport const getBreakEven = (state) => state.formData.breakEven;\nexport const getAnnualizedROR = (state) => state.formData.annualizedROR;\nexport const getDownsideProtection = (state) => state.formData.downsideProtection;\n\n// Memoized selectors\nexport const selectExpirationDate = createSelector(\n  (state) => state.formData.expirationDate,\n  (expirationDate) => expirationDate\n);\n\nexport const selectEntryDate = createSelector(\n  (state) => state.formData.entryDate,\n  (entryDate) => entryDate\n);\n\nexport const selectStockTicker = createSelector(getStockTicker, (stockTicker) => stockTicker);\nexport const selectStockPrice = createSelector((state) => state.formData.stockPrice, (stockPrice) => stockPrice);\nexport const selectShortStrike = createSelector((state) => state.formData.shortStrike, (shortStrike) => shortStrike);\nexport const selectCredit = createSelector((state) => state.formData.credit, (credit) => credit);\nexport const selectDividend = createSelector((state) => state.formData.dividend, (dividend) => dividend);\nexport const selectCombinedProfit = createSelector(getCombinedProfit, (combinedProfit) => combinedProfit);\nexport const selectCostPerShares = createSelector(getCostPerShares, (costPerShares) => costPerShares);\nexport const selectROR = createSelector(getRORState, (ror) => ror);\nexport const selectDays = createSelector(getDays, (days) => days);\nexport const selectExitLevel = createSelector(getExitLvl, (exitLevel) => exitLevel);\nexport const selectBreakEven = createSelector(getBreakEven, (breakEven) => breakEven);\nexport const selectAnnualizedROR = createSelector(getAnnualizedROR, (annualizedROR) => annualizedROR);\nexport const selectDownsideProtection = createSelector(getDownsideProtection, (downsideProtection) => downsideProtection);\n","export const isValidNumber = (value) => {\n  return (\n    typeof value === 'number' &&\n    !isNaN(value) &&\n    value !== Infinity &&\n    value !== -Infinity\n  );\n};\n\n// export const formatNumber = (number) => {\n//   return new Intl.NumberFormat().format(number);\n// };\n\nexport const formatNumber = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport CustomInput from '../CustomInput';\nimport './styles.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectExpirationDate,\n  selectEntryDate,\n  selectStockTicker,\n  selectStockPrice,\n  selectShortStrike,\n  selectCredit,\n  selectDividend,\n  selectCombinedProfit,\n  selectCostPerShares,\n  selectBreakEven,\n  selectROR,\n  selectDays,\n} from '../../store/selectors';\nimport {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCredit,\n  setDividend,\n  setCombinedProfit,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} from '../../store/formatDataSlice';\nimport * as yup from 'yup';\nimport { formatNumber } from '../../helpers';\n\nconst validationSchema = yup.object().shape({\n  stockTicker: yup.string().required('Stock ticker is required'),\n  entryDate: yup\n    .date()\n    .required('Entry date is required')\n    .max(\n      yup.ref('expirationDate'),\n      'Entry date must be before expiration date'\n    ),\n  expirationDate: yup\n    .date()\n    .required('Expiration date is required')\n    .min(yup.ref('entryDate'), 'Expiration date must be after entry date'),\n  // stockPrice: yup.number().required('Stock price is required'),\n  stockPrice: yup\n    .number()\n    .min(0.01, 'Stock price must be greater than 0')\n    .required('Stock price is required'),\n  shortStrike: yup.number().required('Short strike is required'),\n  credit: yup.number().required('Credit is required'),\n  dividend: yup.number().required('Dividend is required'),\n});\nconst getTodayDate = () => {\n  const today = new Date();\n  const yyyy = today.getFullYear();\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n  const dd = String(today.getDate()).padStart(2, '0');\n\n  return `${yyyy}-${mm}-${dd}`;\n};\n\nconst MyForm = () => {\n  const today = getTodayDate();\n  const dispatch = useDispatch();\n  const expirationDate = useSelector(selectExpirationDate);\n  const entryDate = useSelector(selectEntryDate);\n  const stockTicker = useSelector(selectStockTicker);\n  const stockPrice = useSelector(selectStockPrice);\n  const shortStrike = useSelector(selectShortStrike);\n  const credit = useSelector(selectCredit);\n  const dividend = useSelector(selectDividend);\n  const combinedProfit = useSelector(selectCombinedProfit);\n  const costPerShares = useSelector(selectCostPerShares);\n  const breakEven = useSelector(selectBreakEven);\n  const ror = useSelector(selectROR);\n  const days = useSelector(selectDays);\n\n  const calculateDays = (entryDateString, expirationDateString) => {\n    const entryDate = new Date(entryDateString);\n    const expirationDate = new Date(expirationDateString);\n    const oneDayMilliseconds = 1000 * 60 * 60 * 24;\n    const days = (expirationDate - entryDate) / oneDayMilliseconds;\n    return Math.ceil(days);\n  };\n\n  useEffect(() => {\n    const days = calculateDays(entryDate, expirationDate);\n    if (!isNaN(days) && days >= 0) {\n      dispatch(setUpdateDays(days));\n    }\n\n    if (!isNaN(stockPrice)) {\n      const stockExitLevel = Math.round(stockPrice * 0.92);\n      dispatch(setExitLevel(stockExitLevel));\n\n      const costPerShares = (parseFloat(stockPrice - credit) * 100).toFixed(2);\n      dispatch(setCostPerShares(costPerShares));\n\n      const breakEvenData = parseFloat(\n        stockPrice - (credit - dividend)\n      ).toFixed(2);\n      dispatch(setBreakEven(breakEvenData));\n\n      if (breakEven > 0 && !isNaN(breakEven)) {\n        const downsideProtectionData = breakEven / stockPrice - 1;\n        dispatch(setDownsideProtection(downsideProtectionData));\n      }\n    }\n\n    const combinedNet =\n      parseFloat(credit) +\n      parseFloat(dividend) -\n      parseFloat(stockPrice - shortStrike);\n    dispatch(setCombinedProfit(combinedNet));\n\n    const annualizedRORData = (ror / days) * 365;\n    const outputAnnRORData = annualizedRORData.toFixed(2);\n    dispatch(setAnnualizedROR(outputAnnRORData));\n\n    const rorData = parseFloat((combinedProfit * 100) / costPerShares);\n    const rorOutPut = (rorData * 100).toFixed(2);\n    dispatch(setROR(rorOutPut));\n  }, [\n    entryDate,\n    expirationDate,\n    stockPrice,\n    shortStrike,\n    credit,\n    dividend,\n    breakEven,\n    combinedProfit,\n    costPerShares,\n    ror,\n    days,\n    dispatch,\n  ]);\n\n  const handleSetCredit = (e, formikProps) => {\n    const value = e.target.value;\n    formikProps.setFieldValue('credit', value);\n    dispatch(setCredit(value));\n  };\n\n  const handleSetDividend = (e, formikProps) => {\n    const value = e.target.value;\n    formikProps.setFieldValue('dividend', value);\n    dispatch(setDividend(value));\n  };\n\n  const handleStockTickerChange = (e, formikProps) => {\n    const value = e.target.value;\n    formikProps.setFieldValue('stockTicker', value);\n    dispatch(setStockTicker(value));\n  };\n\n  const handleEntryDateChange = (e, formikProps) => {\n    const value = e.target.value;\n    formikProps.setFieldValue('entryDate', value);\n    dispatch(setEntryDate(value));\n  };\n\n  const handleExpirationDateChange = (e, formikProps) => {\n    const value = e.target.value;\n    formikProps.setFieldValue('expirationDate', value);\n    dispatch(setExpirationDate(value));\n  };\n\n  const handleStockPriceChange = (e, formikProps) => {\n    const value = e.target.value === '' ? '' : Number(e.target.value);\n    formikProps.setFieldValue('stockPrice', value);\n    dispatch(setStockPrice(value));\n  };\n\n  const handleShortStrikeChange = (e, formikProps) => {\n    const value = e.target.value === '' ? '' : Number(e.target.value);\n    formikProps.setFieldValue('shortStrike', value);\n    dispatch(setShortStrike(value));\n  };\n\n  return (\n    <div>\n      <h1 className=\"main-title\">Steady Calculator</h1>\n      <Formik\n        initialValues={{\n          stockTicker: 'AAPL',\n          entryDate: today,\n          expirationDate: '',\n          stockPrice: '',\n          shortStrike: '',\n          credit: '',\n          dividend: '',\n        }}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <Form>\n            <div className=\"form-grid\">\n              <Field\n                component={CustomInput}\n                label=\"Enter stock/ticker:\"\n                name=\"stockTicker\"\n                onChange={(e) => handleStockTickerChange(e, formikProps)}\n                placeholder=\"e.g AAPL\"\n                value={stockTicker}\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Entry date:\"\n                name=\"entryDate\"\n                onChange={(e) => handleEntryDateChange(e, formikProps)}\n                type=\"date\"\n                value={entryDate}\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Expiration date:\"\n                name=\"expirationDate\"\n                onChange={(e) => handleExpirationDateChange(e, formikProps)}\n                type=\"date\"\n                formikProps={formikProps}\n              />\n\n              <Field\n                component={CustomInput}\n                label=\"Stock Price:\"\n                name=\"stockPrice\"\n                onChange={(e) => handleStockPriceChange(e, formikProps)}\n                type=\"number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Short strike:\"\n                name=\"shortStrike\"\n                onChange={(e) => handleShortStrikeChange(e, formikProps)}\n                type=\"number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Credit:\"\n                name=\"credit\"\n                type=\"number\"\n                onChange={(e) => handleSetCredit(e, formikProps)}\n                placeholder=\"enter credit number\"\n                formikProps={formikProps}\n              />\n              <Field\n                component={CustomInput}\n                label=\"Dividend:\"\n                name=\"dividend\"\n                type=\"number\"\n                onChange={(e) => handleSetDividend(e, formikProps)}\n                placeholder=\"eneter dividend number\"\n                formikProps={formikProps}\n              />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default MyForm;\n","import React from 'react';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\n// const ProgressBar = ({ currentStep, steps, credit }) => {\n//   const calculateCreditPosition = (credit, steps) => {\n//     const creditStep = 100 / (steps.length - 1);\n//     const stepIndex = Math.round(credit / creditStep);\n//     return stepIndex;\n//   };\n//   const isConstantStep = (index) => (index === 2 ? 'is-constant' : '');\n//   const creditPosition = calculateCreditPosition(credit, steps);\n\n//   return (\n//     <section>\n//       <ol className=\"progress-bar\">\n//         {steps.map((step, index) => (\n//           <li\n//             key={index}\n//             className={[\n//               currentStep === index && currentStep !== 3\n//                 ? 'is-active'\n//                 : currentStep > index\n//                 ? 'is-complete'\n//                 : '',\n//               isConstantStep(index),\n//             ].join(' ')}\n//           >\n//             <span>{step.label}</span>\n//             {creditPosition === index && (\n//               <div\n//                 className=\"credit-value\"\n//                 style={{\n//                   position: 'absolute',\n//                   bottom: '-20px',\n//                   left: '50%',\n//                   transform: 'translateX(-50%)',\n//                   color: 'red',\n//                 }}\n//               >\n//                 {credit}\n//               </div>\n//             )}\n//             <div\n//               className=\"hover-progress-bar\"\n//               data-index={index}\n//               style={{ width: '0%', backgroundColor: 'red' }}\n//             ></div>\n//           </li>\n//         ))}\n//       </ol>\n//     </section>\n//   );\n// };\n\nconst ProgressBar = ({ currentStep, steps, credit }) => {\n  const calculateCreditPosition = (credit, steps) => {\n    const creditStep = 100 / (steps.length - 1);\n    const stepIndex = Math.round(credit / creditStep);\n    return stepIndex;\n  };\n  const isConstantStep = (index) => (index === 2 ? 'is-constant' : '');\n  const creditPosition = calculateCreditPosition(credit, steps);\n\n  return (\n    <section>\n      <ol className=\"progress-bar\">\n        {steps.map((step, index) => (\n          <li\n            key={index}\n            className={[\n              currentStep === index && currentStep !== 3\n                ? 'is-active'\n                : currentStep > index\n                ? 'is-complete'\n                : '',\n              isConstantStep(index),\n            ].join(' ')}\n          >\n            <span>{step.label}</span>\n            {creditPosition === index && (\n              <div\n                className=\"credit-value\"\n                style={{\n                  position: 'absolute',\n                  bottom: '-70px',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  color: 'white',\n                  padding: '5px',\n                  height: '30px',\n                  backgroundColor: 'red',\n                  display: 'flex',\n                  alignItems: 'center',\n                  transition: 'opacity 0.3s ease-in-out',\n                }}\n              >\n                {`Call.$ ${credit}`}\n              </div>\n            )}\n            <div\n              className=\"hover-progress-bar\"\n              data-index={index}\n              style={{ width: '0%', backgroundColor: 'red' }}\n            ></div>\n            {/* Add this div */}\n            {creditPosition === index && (\n              <div\n                className=\"credit-progress-bar\"\n                style={{\n                  width: `${(index * 100) / (steps.length - 1)}%`,\n                  opacity: 1,\n                }}\n              ></div>\n            )}\n          </li>\n        ))}\n      </ol>\n    </section>\n  );\n};\n\nexport default ProgressBar;\n\nProgressBar.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  steps: PropTypes.any.isRequired,\n  credit: PropTypes.number,\n};\n","// Result.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  selectStockTicker,\n  selectDays,\n  selectExitLevel,\n  selectCombinedProfit,\n  selectCostPerShares,\n  selectROR,\n  selectBreakEven,\n  selectDownsideProtection,\n  selectAnnualizedROR,\n  selectCredit,\n} from '../../store/selectors';\nimport TradingViewWidget from '../TradingView';\nimport './styles.css';\nimport { isValidNumber, formatNumber } from '../../helpers';\nimport ProgressBar from '../ProgressBar';\nconst Result = () => {\n  const [currentStep, setCurrentStep] = useState(3);\n\n  const steps = [\n    { label: '1000' },\n    { label: '2000' },\n    { label: '100 shares' },\n    { label: '100 shares' },\n    { label: 'three hundred backs' },\n    { label: 'hello' },\n    { label: 'Test' },\n    { label: 'Step' },\n  ];\n\n  const stockTicker = useSelector(selectStockTicker);\n  const days = useSelector(selectDays);\n  const exitLevel = useSelector(selectExitLevel);\n  const combinedProfit = useSelector(selectCombinedProfit);\n  const costPerShares = useSelector(selectCostPerShares);\n  const ror = useSelector(selectROR);\n  const breakEven = useSelector(selectBreakEven);\n  const downsideProtection = useSelector(selectDownsideProtection);\n  const annualizedROR = useSelector(selectAnnualizedROR);\n  const credit = useSelector(selectCredit);\n\n  // const stockPrice = useSelector(selectStockPrice);\n\n  const isAnnualizedROR = isValidNumber(parseFloat(annualizedROR))\n    ? annualizedROR\n    : 0;\n  const isROR = isValidNumber(parseFloat(ror)) ? ror : 0;\n  const isCombinedProfit = isValidNumber(combinedProfit) ? combinedProfit : 0;\n  const isDownsideProtection = isValidNumber(downsideProtection)\n    ? downsideProtection\n    : 0;\n  const formatedROR = formatNumber.format(isROR);\n  const costPerSharesData = formatNumber.format(costPerShares);\n  const combinedNetOutput = formatNumber.format(isCombinedProfit);\n  const annualizedROROutput = formatNumber.format(isAnnualizedROR);\n  const downsideProtectionOutput = isDownsideProtection.toLocaleString(\n    'en-US',\n    { style: 'percent', maximumFractionDigits: 2 }\n  );\n  const maxProfit = combinedNetOutput * 100;\n\n  return (\n    <div className=\"result-container\">\n      <div className=\"title-and-content-wrapper\">\n        <h2 className=\"result-title\">Your Results</h2>\n        <div className=\"content-wrapper\">\n          <div className=\"result-grid\">\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">\n                Combined Net Credit / Profit\n              </span>\n              <span className=\"result-item-value\">${combinedNetOutput}</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Cost per 100 shares</span>\n              <span className=\"result-item-value\">${costPerSharesData}</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Downside protection</span>\n              <span className=\"result-item-value\">\n                {downsideProtectionOutput}\n              </span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">ROR</span>\n              <span className=\"result-item-value\">{formatedROR}%</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Annualized ROR</span>\n              <span className=\"result-item-value\">{annualizedROROutput}%</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Break Even</span>\n              <span className=\"result-item-value\">{breakEven}</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Days</span>\n              <span className=\"result-item-value\">{days}</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Stock Ticker</span>\n              <span className=\"result-item-value\">{stockTicker}</span>\n            </div>\n            <div className=\"result-item\">\n              <span className=\"result-item-title\">Exit Level</span>\n              <span className=\"result-item-value\">${exitLevel}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"cover-call-container\">\n        <h3>The Covered Call</h3>\n        <div className=\"result-container-cover\">\n          <div className=\"result-item\">\n            <span className=\"result-item-title\">Cost Basis</span>\n            <span className=\"result-item-value\">{costPerSharesData}</span>\n          </div>\n          <div className=\"result-item\">\n            <span className=\"result-item-title\">Max Profit</span>\n            <span className=\"result-item-value\">{maxProfit}</span>\n          </div>\n        </div>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar\n            currentStep={currentStep}\n            steps={steps}\n            credit={credit}\n          />\n        </div>\n        <div className=\"tradingview-container\">\n          <h3 className=\"tradingview-title\">Interactive Chart</h3>\n          <TradingViewWidget stockTicker={stockTicker} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  stockTicker: PropTypes.string,\n  days: PropTypes.number,\n  exitLevel: PropTypes.number,\n  combinedProfit: PropTypes.number,\n  costPerShares: PropTypes.number,\n  ror: PropTypes.number,\n  breakEven: PropTypes.number,\n  downsideProtection: PropTypes.number,\n  annualizedROR: PropTypes.number,\n};\n\nexport default Result;\n","import React from 'react';\nimport MyForm from '../components/CustomForms';\nimport ResultComponent from '../components/ResultComponent';\n\nconst Home = () => {\n  return (\n    <div>\n      <MyForm />\n      <ResultComponent />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={<Home /> } />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\ncreateRoot(rootElement).render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}