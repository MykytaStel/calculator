{"version":3,"sources":["components/TradingView/index.js","store/formatDataSlice.js","store/crashReporter.js","store/logger.js","store/index.js","components/CustomInput/index.js","components/Button/index.js","store/selectors/index.js","components/CustomForms/index.js","components/ResultComponent/index.js","pages/Home.js","pages/MyProfile.js","components/Header/index.js","components/Sidebar/index.js","App.js","index.js"],"names":["tvScriptLoadingPromise","initialState","stockTicker","days","entryDate","Date","toISOString","split","expirationDate","exitLevel","stockPrice","credit","dividend","shortStrike","combinedProfit","costPerShares","ror","breakEven","downsideProtection","annualizedROR","formDataSlice","createSlice","name","reducers","setStockTicker","state","action","payload","setEntryDate","setExpirationDate","setUpdateDays","setExitLevel","setStockPrice","setCombinedProfit","setCredit","setDividend","setShortStrike","setCostPerShares","setROR","setBreakEven","setDownsideProtection","setAnnualizedROR","_formDataSlice$action","actions","crashReporter","next","err","console","error","logger","store","group","type","log","result","getState","groupEnd","configureStore","reducer","formData","formDataReducer","middleware","getDefaultMiddleware","concat","CustomInput","_ref","field","_ref$form","form","touched","errors","label","placeholder","props","_objectWithoutProperties","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useState3","_useState4","isFilled","setIsFilled","showPlaceholder","isError","React","createElement","className","htmlFor","id","Object","assign","onFocus","onBlur","e","target","value","Button","title","getStockTicker","getDays","getExitLvl","getCombinedProfit","getCostPerShares","getRORState","getBreakEven","getAnnualizedROR","getDownsideProtection","selectExpirationDate","createSelector","selectEntryDate","selectStockTicker","selectStockPrice","selectShortStrike","selectCredit","selectDividend","selectCombinedProfit","selectCostPerShares","selectROR","selectDays","selectBreakEven","validationSchema","yup","shape","input1","required","input2","input3","input4","input5","input6","input7","input8","input9","MyForm","today","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","getTodayDate","dispatch","useDispatch","useSelector","useEffect","entryDateString","expirationDateString","Math","ceil","calculateDays","isNaN","stockExitLevel","parseFloat","toFixed","combinedNet","annualizedRORData","breakEvenData","downsideProtectionData","rorData","handleSetCredit","handleSetDividend","handleStockTickerChange","handleEntryDateChange","handleExpirationDateChange","handleStockPriceChange","Number","handleShortStrikeChange","Formik","initialValues","onSubmit","values","setSubmitting","_ref2","isSubmitting","Form","Field","component","onChange","disabled","connect","onLoadScriptRef","useRef","current","document","getElementById","window","TradingView","widget","autosize","symbol","interval","timezone","theme","style","locale","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","details","hotlist","container_id","Promise","resolve","script","src","onload","head","appendChild","then","isAnnualizedROR","isROR","isCombinedProfit","TradingViewWidget","Home","ResultComponent","MyProfile","Header","role","aria-label","href","Sidebar","isOpen","setIsOpen","onClick","map","item","index","key","toLowerCase","replace","App","Router","Link","to","Routes","Route","path","element","rootElement","createRoot","render","Provider"],"mappings":"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","file":"static/js/main.dd93f249.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { getStockTicker } from '../../store/selectors';\nimport { connect, useSelector } from 'react-redux';\n\nlet tvScriptLoadingPromise;\n\nconst TradingViewWidget = () => {\n  const onLoadScriptRef = useRef();\n  const stockTicker = useSelector(getStockTicker);\n\n  useEffect(() => {\n    onLoadScriptRef.current = createWidget;\n\n    if (!tvScriptLoadingPromise) {\n      tvScriptLoadingPromise = new Promise((resolve) => {\n        const script = document.createElement('script');\n        script.id = 'tradingview-widget-loading-script';\n        script.src = 'https://s3.tradingview.com/tv.js';\n        script.type = 'text/javascript';\n        script.onload = resolve;\n\n        document.head.appendChild(script);\n      });\n    }\n\n    tvScriptLoadingPromise.then(\n      () => onLoadScriptRef.current && onLoadScriptRef.current()\n    );\n\n    return () => (onLoadScriptRef.current = null);\n    function createWidget() {\n      if (\n        document.getElementById('tradingview_215b4') &&\n        'TradingView' in window\n      ) {\n        new window.TradingView.widget({\n          autosize: true,\n          symbol: stockTicker,\n          interval: 'W',\n          timezone: 'Etc/UTC',\n          theme: 'light',\n          style: '1',\n          locale: 'en',\n          toolbar_bg: '#f1f3f6',\n          enable_publishing: false,\n          withdateranges: true,\n          hide_side_toolbar: false,\n          allow_symbol_change: true,\n          details: true,\n          hotlist: true,\n          container_id: 'tradingview_215b4',\n        });\n      }\n    }\n  }, [stockTicker]);\n\n  return (\n    <div className=\"tradingview-widget-container\">\n      <div id=\"tradingview_215b4\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stockTicker: getStockTicker(state),\n});\n\nexport default connect(mapStateToProps)(TradingViewWidget);\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  stockTicker: 'AAPL',\n  days: 0,\n  entryDate: new Date().toISOString().split('T')[0],\n  expirationDate: new Date().toISOString().split('T')[0],\n  exitLevel: 0,\n  stockPrice: 0,\n  credit: 0,\n  dividend: '',\n  shortStrike: 0,\n  combinedProfit: 0,\n  costPerShares: 0,\n  ror: 0,\n  breakEven: 0,\n  downsideProtection: 0,\n  annualizedROR: 0,\n};\n\nconst formDataSlice = createSlice({\n  name: 'formData',\n  initialState,\n  reducers: {\n    setStockTicker: (state, action) => {\n      state.stockTicker = action.payload;\n    },\n    setEntryDate: (state, action) => {\n      state.entryDate = action.payload;\n    },\n    setExpirationDate: (state, action) => {\n      state.expirationDate = action.payload;\n    },\n    setUpdateDays: (state, action) => {\n      state.days = action.payload;\n    },\n    setExitLevel: (state, action) => {\n      state.exitLevel = action.payload;\n    },\n    setStockPrice: (state, action) => {\n      state.stockPrice = action.payload;\n    },\n    setCombinedProfit: (state, action) => {\n      state.combinedProfit = action.payload;\n    },\n    setCredit: (state, action) => {\n      state.credit = action.payload;\n    },\n    setDividend: (state, action) => {\n      state.dividend = action.payload;\n    },\n    setShortStrike: (state, action) => {\n      state.shortStrike = action.payload;\n    },\n    setCostPerShares: (state, action) => {\n      state.costPerShares = action.payload;\n    },\n    setROR: (state, action) => {\n      state.ror = action.payload;\n    },\n    setBreakEven: (state, action) => {\n      state.breakEven = action.payload;\n    },\n    setDownsideProtection: (state, action) => {\n      state.downsideProtection = action.payload;\n    },\n    setAnnualizedROR: (state, action) => {\n      state.annualizedROR = action.payload;\n    },\n  },\n});\n\nexport const {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCombinedProfit,\n  setCredit,\n  setDividend,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} = formDataSlice.actions;\n\nexport default formDataSlice.reducer;\n","const crashReporter = () => (next) => (action) => {\n  try {\n    return next(action);\n  } catch (err) {\n    console.error('Caught an exception!', err);\n    throw err;\n  }\n};\n\nexport default crashReporter;\n","// logger.js\nconst logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('dispatching', action);\n  const result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { configureStore } from '@reduxjs/toolkit';\nimport formDataReducer from '../store/formatDataSlice';\nimport crashReporter from '../store/crashReporter';\nimport logger from '../store/logger';\n\nconst store = configureStore({\n  reducer: {\n    formData: formDataReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(crashReporter, logger),\n});\n\nexport default store;\n","// CustomInput.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CustomInput = ({\n  field,\n  form: { touched, errors },\n  label,\n  placeholder,\n  ...props\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    if (e.target.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  };\n\n  const showPlaceholder = isFocused && !isFilled;\n  const isError = touched[field.name] && errors[field.name];\n\n  return (\n    <div className=\"input-wrapper\">\n      {label && (\n        <label\n          className={`floating-label ${isFocused || isFilled ? 'active' : ''} ${\n            isError ? 'error' : ''\n          }`}\n          htmlFor={props.id || props.name}\n        >\n          {label}\n        </label>\n      )}\n      <input\n        className={`${isError ? 'input-error' : ''}`}\n        placeholder={showPlaceholder ? placeholder : ''}\n        {...props}\n        onFocus={() => setIsFocused(true)}\n        onBlur={handleBlur}\n      />\n      {isError && <div className=\"error-message\">{errors[field.name]}</div>}\n    </div>\n  );\n};\n\nCustomInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.shape({\n    touched: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n  }).isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default CustomInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst Button = ({ title, ...props }) => {\n  return (\n    <button {...props} className=\"red-button\">\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getStockTicker = (state) => state.formData.stockTicker;\nexport const getDays = (state) => state.formData.days;\nexport const getExitLvl = (state) => state.formData.exitLevel;\nexport const getCombinedProfit = (state) => state.formData.combinedProfit;\nexport const getCostPerShares = (state) => state.formData.costPerShares;\nexport const getRORState = (state) => state.formData.ror;\nexport const getBreakEven = (state) => state.formData.breakEven;\nexport const getAnnualizedROR = (state) => state.formData.annualizedROR;\nexport const getDownsideProtection = (state) => state.formData.downsideProtection;\n\n// Memoized selectors\nexport const selectExpirationDate = createSelector(\n  (state) => state.formData.expirationDate,\n  (expirationDate) => expirationDate\n);\n\nexport const selectEntryDate = createSelector(\n  (state) => state.formData.entryDate,\n  (entryDate) => entryDate\n);\n\nexport const selectStockTicker = createSelector(getStockTicker, (stockTicker) => stockTicker);\nexport const selectStockPrice = createSelector((state) => state.formData.stockPrice, (stockPrice) => stockPrice);\nexport const selectShortStrike = createSelector((state) => state.formData.shortStrike, (shortStrike) => shortStrike);\nexport const selectCredit = createSelector((state) => state.formData.credit, (credit) => credit);\nexport const selectDividend = createSelector((state) => state.formData.dividend, (dividend) => dividend);\nexport const selectCombinedProfit = createSelector(getCombinedProfit, (combinedProfit) => combinedProfit);\nexport const selectCostPerShares = createSelector(getCostPerShares, (costPerShares) => costPerShares);\nexport const selectROR = createSelector(getRORState, (ror) => ror);\nexport const selectDays = createSelector(getDays, (days) => days);\nexport const selectExitLevel = createSelector(getExitLvl, (exitLevel) => exitLevel);\nexport const selectBreakEven = createSelector(getBreakEven, (breakEven) => breakEven);\nexport const selectAnnualizedROR = createSelector(getAnnualizedROR, (annualizedROR) => annualizedROR);\nexport const selectDownsideProtection = createSelector(getDownsideProtection, (downsideProtection) => downsideProtection);\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport CustomInput from '../CustomInput';\nimport Button from '../Button';\nimport './styles.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectExpirationDate,\n  selectEntryDate,\n  selectStockTicker,\n  selectStockPrice,\n  selectShortStrike,\n  selectCredit,\n  selectDividend,\n  selectCombinedProfit,\n  selectCostPerShares,\n  selectBreakEven,\n  selectROR,\n  selectDays,\n} from '../../store/selectors'\nimport {\n  setStockTicker,\n  setEntryDate,\n  setUpdateDays,\n  setExpirationDate,\n  setExitLevel,\n  setStockPrice,\n  setCredit,\n  setDividend,\n  setCombinedProfit,\n  setShortStrike,\n  setCostPerShares,\n  setROR,\n  setBreakEven,\n  setDownsideProtection,\n  setAnnualizedROR,\n} from '../../store/formatDataSlice';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object().shape({\n  input1: yup.string().required('This field is required'),\n  input2: yup.date().required('This field is required'),\n  input3: yup.date().required('This field is required'),\n  input4: yup.number().required('This field is required'),\n  input5: yup.number().required('This field is required'),\n  input6: yup.number().required('This field is required'),\n  input7: yup.number().required('This field is required'),\n  input8: yup.number().required('This field is required'),\n  input9: yup.number().required('This field is required'),\n});\n\nconst getTodayDate = () => {\n  const today = new Date();\n  const yyyy = today.getFullYear();\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n  const dd = String(today.getDate()).padStart(2, '0');\n\n  return `${yyyy}-${mm}-${dd}`;\n};\n\nconst MyForm = () => {\n  const today = getTodayDate();\n  const dispatch = useDispatch();\n  const expirationDate = useSelector(selectExpirationDate);\n  const entryDate = useSelector(selectEntryDate);\n  const stockTicker = useSelector(selectStockTicker);\n  const stockPrice = useSelector(selectStockPrice);\n  const shortStrike = useSelector(selectShortStrike);\n  const credit = useSelector(selectCredit);\n  const dividend = useSelector(selectDividend);\n  const combinedProfit = useSelector(selectCombinedProfit);\n  const costPerShares = useSelector(selectCostPerShares);\n  const breakEven = useSelector(selectBreakEven);\n  const ror = useSelector(selectROR);\n  const days = useSelector(selectDays);\n\n  const calculateDays = (entryDateString, expirationDateString) => {\n    const entryDate = new Date(entryDateString);\n    const expirationDate = new Date(expirationDateString);\n    const oneDayMilliseconds = 1000 * 60 * 60 * 24;\n    const days = (expirationDate - entryDate) / oneDayMilliseconds;\n    return Math.ceil(days);\n  };\n\n  useEffect(() => {\n    const days = calculateDays(entryDate, expirationDate);\n    if (!isNaN(days) && days >= 0) {\n      dispatch(setUpdateDays(days));\n    }\n  }, [entryDate, expirationDate, dispatch]);\n\n  useEffect(() => {\n    if (!isNaN(stockPrice)) {\n      const stockExitLevel = parseFloat(stockPrice * 0.92).toFixed(2);\n      dispatch(setExitLevel(stockExitLevel));\n    }\n  }, [stockPrice, setExitLevel]);\n\n  useEffect(() => {\n    // if (!isNaN(stockPrice)) {\n    const costPerShares = parseFloat(stockPrice - credit) * 100;\n    dispatch(setCostPerShares(costPerShares));\n    // }\n  }, [stockPrice, setCostPerShares, credit]);\n\n  useEffect(() => {\n    // if (!isNaN(stockPrice)) {\n    const combinedNet =\n      parseFloat(credit) +\n      parseFloat(dividend) -\n      (parseFloat(stockPrice) - parseFloat(shortStrike));\n\n    dispatch(setCombinedProfit(combinedNet));\n    // }\n  }, [shortStrike, dividend, credit, setCombinedProfit]);\n\n  useEffect(() => {\n    // if (ror > 0 && days > 0 && !isNaN(ror)) {\n    const annualizedRORData = parseFloat(ror / days).toFixed(2) * 100;\n    dispatch(setAnnualizedROR(annualizedRORData));\n    // }\n  }, [ror, days, setAnnualizedROR]);\n\n  useEffect(() => {\n    // if (combinedProfit > 0 && !isNaN(combinedProfit)) {\n    const breakEvenData = parseFloat(stockPrice - (credit - dividend));\n    dispatch(setBreakEven(breakEvenData));\n    // }\n  }, [stockPrice, credit, dividend, setBreakEven]);\n\n  useEffect(() => {\n    if (breakEven > 0 && !isNaN(breakEven)) {\n      const downsideProtectionData = parseFloat(\n        breakEven / stockPrice - 1\n      ).toFixed(2) * 100;\n      dispatch(setDownsideProtection(downsideProtectionData));\n    }\n  }, [breakEven, stockPrice, setDownsideProtection]);\n\n  useEffect(() => {\n    // if (breakEven > 0 && !isNaN(breakEven)) {\n    const rorData = parseFloat((combinedProfit * 100) / costPerShares).toFixed(\n      2\n    ) * 100;\n    dispatch(setROR(rorData));\n    // }\n  }, [breakEven, stockPrice, setDownsideProtection]);\n\n  const handleSetCredit = (e) => {\n    dispatch(setCredit(e.target.value));\n  };\n\n  const handleSetDividend = (e) => {\n    dispatch(setDividend(e.target.value));\n  };\n  // const handleSetExitLevel = useCallback(() => {\n  //   console.log(stockPrice*0.92)\n  //   dispatch(setExitLevel(Number(stockPrice) * 0.92));\n  // },[dispatch, stockPrice])\n\n  const handleStockTickerChange = (e) => {\n    dispatch(setStockTicker(e.target.value));\n  };\n\n  const handleEntryDateChange = (e) => {\n    dispatch(setEntryDate(e.target.value));\n  };\n\n  // const handleDaysChange = (e) => {\n  //   dispatch(setUpdateDays(e.target.value));\n  // };\n\n  const handleExpirationDateChange = (e) => {\n    dispatch(setExpirationDate(e.target.value));\n  };\n\n  const handleStockPriceChange = (e) => {\n    dispatch(setStockPrice(Number(e.target.value)));\n  };\n\n  const handleShortStrikeChange = (e) => {\n    dispatch(setShortStrike(Number(e.target.value)));\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <h1>Form Example</h1>\n      <Formik\n        initialValues={{\n          stockTicker: 'AAPL',\n          entryDate: today,\n          expirationDate: '',\n          stockPrice: '',\n          shortStrike: '',\n          credit: '',\n          input8: '',\n        }}\n        validationSchema={validationSchema}\n        // validate={validate}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className=\"form-grid\">\n              <Field\n                component={CustomInput}\n                placeholder=\"e.g AAPL\"\n                name=\"stockTicker\"\n                label=\"Enter stock/ticker\"\n                value={stockTicker}\n                onChange={handleStockTickerChange}\n              />\n              <Field\n                component={CustomInput}\n                type=\"date\"\n                name=\"entryDate\"\n                label=\"Entry date\"\n                value={entryDate}\n                onChange={handleEntryDateChange}\n              />\n              <Field\n                component={CustomInput}\n                type=\"date\"\n                name=\"expirationDate\"\n                label=\"Expiration date\"\n                onChange={handleExpirationDateChange}\n              />\n              {/* <Field\n                component={CustomInput}\n                type=\"number\"\n                name=\"days\"\n                label=\"Days\"\n                onChange={handleDaysChange}\n              /> */}\n              <Field\n                component={CustomInput}\n                type=\"number\"\n                name=\"stockPrice\"\n                label=\"Stock Price\"\n                onChange={handleStockPriceChange}\n              />\n              <Field\n                component={CustomInput}\n                type=\"number\"\n                name=\"shortStrike\"\n                label=\"Short strike\"\n                onChange={handleShortStrikeChange}\n              />\n              <Field\n                component={CustomInput}\n                name=\"credit\"\n                placeholder=\"enter credit number\"\n                label=\"Credit\"\n                onChange={handleSetCredit}\n              />\n              <Field\n                name=\"dividend\"\n                component={CustomInput}\n                placeholder=\"eneter dividend number\"\n                label=\"Dividend\"\n                onChange={handleSetDividend}\n              />\n            </div>\n            <div className=\"button-container\">\n              <Button type=\"submit\" title=\"Calculate\" disabled={isSubmitting} />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default MyForm;\n","// Result.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  getStockTicker,\n  getDays,\n  getExitLvl,\n  getCombinedProfit,\n  getCostPerShares,\n  getRORState,\n  getBreakEven,\n  getDownsideProtection,\n  getAnnualizedROR,\n} from '../../store/selectors';\nimport TradingViewWidget from '../TradingView';\nimport './styles.css';\n\nconst Result = ({\n  stockTicker,\n  days,\n  exitLevel,\n  combinedProfit,\n  costPerShares,\n  ror,\n  breakEven,\n  downsideProtection,\n  annualizedROR,\n}) => {\n  const isAnnualizedROR = !isNaN(annualizedROR) ? annualizedROR : 0;\n  const isROR = !isNaN(ror) ? ror : 0;\n  const isCombinedProfit = !isNaN(combinedProfit) ? combinedProfit : 0;\n\n  return (\n    <div className=\"result-container\">\n      <h2 className=\"result-title\">Your Results</h2>\n      <div className=\"result-grid\">\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Stock Ticker</span>\n          <span className=\"result-item-value\">{stockTicker}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Days</span>\n          <span className=\"result-item-value\">{days}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Exit Level</span>\n          <span className=\"result-item-value\">${exitLevel}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">\n            Combined Net Credit / Profit\n          </span>\n          <span className=\"result-item-value\">${isCombinedProfit}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Cost per 100 shares</span>\n          <span className=\"result-item-value\">${costPerShares}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">ROR</span>\n          <span className=\"result-item-value\">{isROR}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Downside protection</span>\n          <span className=\"result-item-value\">{downsideProtection}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Annualized ROR</span>\n          <span className=\"result-item-value\">{isAnnualizedROR}%</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-item-title\">Break Even</span>\n          <span className=\"result-item-value\">{breakEven}</span>\n        </div>\n      </div>\n      <div className=\"tradingview-container\">\n        <h3 className=\"tradingview-title\">TradingView Chart</h3>\n        <TradingViewWidget stockTicker={stockTicker} />\n      </div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  stockTicker: PropTypes.string,\n  days: PropTypes.number,\n  exitLevel: PropTypes.number,\n  combinedProfit: PropTypes.number,\n  costPerShares: PropTypes.number,\n  ror: PropTypes.number,\n  breakEven: PropTypes.number,\n  downsideProtection: PropTypes.number,\n  annualizedROR: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => ({\n  stockTicker: getStockTicker(state),\n  days: getDays(state),\n  exitLevel: getExitLvl(state),\n  combinedProfit: getCombinedProfit(state),\n  costPerShares: getCostPerShares(state),\n  ror: getRORState(state),\n  breakEven: getBreakEven(state),\n  downsideProtection: getDownsideProtection(state),\n  annualizedROR: getAnnualizedROR(state),\n  // Add other input field selectors here\n});\n\nexport default connect(mapStateToProps)(Result);\n","import React from 'react';\nimport MyForm from '../components/CustomForms';\nimport ResultComponent from '../components/ResultComponent';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home Page</h1>\n      <MyForm />\n      <ResultComponent />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst MyProfile = () => {\n  return <h1>My Profile</h1>;\n};\n\nexport default MyProfile;\n","import React from 'react';\nimport './styles.css';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        {/* Replace with your desired icon */}\n        <span role=\"img\" aria-label=\"logo\">\n          🔰\n        </span>\n      </div>\n      <nav className=\"nav\">\n        <ul className=\"nav-list\">\n          <li className=\"nav-item\">\n            <a href=\"/\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n            <a href=\"/profile\">Profile</a>\n          </li>\n          <li className=\"nav-item\">\n            <a href=\"/logout\">Logout</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './styles.css';\n\nconst Sidebar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuItems = [\n    'Courses',\n    'Indicators',\n    'TST Inner Circle',\n    'CSA',\n    'SSO System',\n    'My Top 5 Trade Setups',\n    'ETF Edge Portfolio',\n    'Slingshot Traders Playbook',\n    'Trade of the Decade 2.0',\n    '10 for 10',\n  ];\n\n  return (\n    <div className={`sidebar ${isOpen ? 'open' : ''}`}>\n      <button className=\"toggle-btn\" onClick={() => setIsOpen(!isOpen)}>\n        {isOpen ? 'Close' : 'Menu'}\n      </button>\n      <nav>\n        <ul>\n          {menuItems.map((item, index) => (\n            <li key={index}>\n              <a href={`/${item.toLowerCase().replace(/\\s+/g, '-')}`}>{item}</a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// import React from 'react';\n// import Header from './components/Header';\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Header />\n//       <Sidebar />\n//     </div>\n//   );\n// };\n\n// export default App;\n// App.js\n// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\nimport MyProfile from './pages/MyProfile';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Sidebar />\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/profile\">My Profile</Link>\n            </li>\n          </ul>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/profile\" element={<MyProfile />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\ncreateRoot(rootElement).render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}